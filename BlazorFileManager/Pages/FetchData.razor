@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using BlazorFileManager.Data
@inject WeatherForecastService ForecastService

@*<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>*@

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @*<Radzen>



        <RadzenDataGrid Data="@forecasts" TItem="WeatherForecast" AllowFiltering="true"
                        PageSize="5" AllowPaging="true  "
                        AllowSorting="true" AllowColumnResize="true">
            <Columns>
                <RadzenDataGridColumn TItem="WeatherForecast" Property="Date" Title="Date">
                    <Template Context="forecast">
                        @forecast.Date.ToShortDateString()
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="WeatherForecast" Property="TemperatureC" Title="Temp. (C)" />
                <RadzenDataGridColumn TItem="WeatherForecast" Property="TemperatureF" Title="Temp. (F)" />
                <RadzenDataGridColumn TItem="WeatherForecast" Property="Summary" Title="Summary" />
            </Columns>
        </RadzenDataGrid>*@


    <RadzenSplitter Orientation="Orientation.Vertical" style="height: 90vh; border: 1px solid rgba(0,0,0,.08);">
        <RadzenSplitterPane Size="100px">
            <RadzenSplitter>
                <RadzenSplitterPane Size="50%" Min="30px" Max="70%">
                    Pane A1
                    <div style="font-size: 10px;">
                        50% Min 30px Max 70%
                    </div>
                </RadzenSplitterPane>
                <RadzenSplitterPane>
                    <RadzenDataGrid Data="@forecasts" TItem="WeatherForecast" AllowFiltering="true" 
                                    AllowVirtualization="true" Style="height:100vh"
                                    AllowSorting="true" AllowColumnResize="true">
                        <Columns>
                            <RadzenDataGridColumn TItem="WeatherForecast" Property="Date" Title="Date">
                                <Template Context="forecast">
                                    @forecast.Date.ToShortDateString()
                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="WeatherForecast" Property="TemperatureC" Title="Temp. (C)" />
                            <RadzenDataGridColumn TItem="WeatherForecast" Property="TemperatureF" Title="Temp. (F)" />
                            <RadzenDataGridColumn TItem="WeatherForecast" Property="Summary" Title="Summary" />
                        </Columns>
                    </RadzenDataGrid>
                </RadzenSplitterPane>
            </RadzenSplitter>
        </RadzenSplitterPane>
    </RadzenSplitter>






    @*<table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>*@
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }



}
